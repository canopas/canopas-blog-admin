# name: Deploy to dev

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy-dev:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2.3.3

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-frontend-access
#           aws-region: ap-south-1

#       - name: Build frontend and push on ECR
#         run: |
#           cd website
#           echo NEXT_PUBLIC_IFRAMELY_KEY=${{ secrets.IFRAMELY_KEY_DEV }} >> .env
#           echo NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY_DEV }} >> .env
#           echo NEXT_PUBLIC_MIXPANEL_PROJECT_TOKEN=${{ secrets.MIXPANEL_PROJECT_TOKEN_DEV }} >> .env
#           echo NEXT_PUBLIC_STRAPI_URL=${{ secrets.STRAPI_URL }} >> .env
#           echo NEXT_PUBLIC_STRAPI_DOMAIN=${{ secrets.STRAPI_DOMAIN }} >> .env
#           echo NEXT_PUBLIC_WEBSITE_URL=${{ secrets.WEBSITE_URL_DEV }} >> .env
#           echo NEXT_PUBLIC_API_BASE=${{ secrets.API_BASE_DEV }} >> .env
#           bash ./../deploy/deploy-ecr-image.sh dev-blog ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/canopas-blog

#       - name: Trigger Canopas website Workflow
#         uses: actions/github-script@v6
#         with:
#           github-token: ${{ secrets.WORKFLOW_TOKEN }}
#           script: |
#             await github.rest.repos.createDispatchEvent({
#               owner: 'canopas',
#               repo: 'canopas-website',
#               event_type: 'deploy-blog-dev',
#             });
